// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol_type/protocol_type.proto

package com.github.onlynight.chatim.server.data.protocol;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ProtocolType}
   */
  public enum ProtocolType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HANDSHAKE = 1;</code>
     */
    HANDSHAKE(0, 1),
    /**
     * <code>LOGIN = 2;</code>
     */
    LOGIN(1, 2),
    /**
     * <code>TEXT_MESSAGE = 3;</code>
     */
    TEXT_MESSAGE(2, 3),
    ;

    /**
     * <code>HANDSHAKE = 1;</code>
     */
    public static final int HANDSHAKE_VALUE = 1;
    /**
     * <code>LOGIN = 2;</code>
     */
    public static final int LOGIN_VALUE = 2;
    /**
     * <code>TEXT_MESSAGE = 3;</code>
     */
    public static final int TEXT_MESSAGE_VALUE = 3;


    public final int getNumber() { return value; }

    public static ProtocolType valueOf(int value) {
      switch (value) {
        case 1: return HANDSHAKE;
        case 2: return LOGIN;
        case 3: return TEXT_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProtocolType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ProtocolType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProtocolType>() {
            public ProtocolType findValueByNumber(int number) {
              return ProtocolType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.onlynight.chatim.server.data.protocol.Protocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final ProtocolType[] VALUES = values();

    public static ProtocolType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ProtocolType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtocolType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!protocol_type/protocol_type.proto*:\n\014P" +
      "rotocolType\022\r\n\tHANDSHAKE\020\001\022\t\n\005LOGIN\020\002\022\020\n" +
      "\014TEXT_MESSAGE\020\003B<\n0com.github.onlynight." +
      "chatim.server.data.protocolB\010Protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
